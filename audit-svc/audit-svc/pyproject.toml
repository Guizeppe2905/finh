[tool.poetry]
name = "audit-svc"
version = "0.1.0"
description = ""
authors = []
readme = "README.md"
packages = [{ include = "audit_svc", from = "src" }]

[tool.poetry.scripts]
server = "audit_svc.bin.server:main"
migrate = "audit_svc.bin.migrate:main"
generate = "audit_svc.bin.generate:main"

[tool.poetry.dependencies]
python = "^3.10"
asyncpg = "^0.29.0"
aiohttp = "^3.9.1"
prometheus-client = "^0.19.0"
pydantic = "^2.5.2"
pydantic-settings = "^2.1.0"
aiohttp-prometheus-exporter = "^0.2.4"
aiofiles = "^23.2.1"
ruamel-yaml = "^0.18.5"
readerwriterlock = "^1.0.9"

[tool.mypy]
ignore_missing_imports = true

[tool.pylint.messages_control]
disable = [
  "missing-function-docstring",
  "missing-class-docstring",
  "missing-module-docstring",
  "invalid-name",
  "no-member",
  "no-name-in-module",
  "too-few-public-methods",
  "undefined-loop-variable",
  "too-many-arguments",
  "unused-import",
  "import-error",
]

[tool.pylint.format]
max-line-length = "88"

[tool.isort]
profile = "black"

[tool.pyright]
reportImportCycles = "error"
reportUnusedImport = "warning"

[tool.bandit]
skips = ["B101"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
